name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  build_and_test:
    name: Build, Lint, and Test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run eslint
      - name: Unit Tests
        run: npm run test
      - name: Build
        run: npm run build

  playwright_tests:
    name: Playwright Tests
    runs-on: ubuntu-20.04
    needs: build_and_test
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npx playwright test
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  tag_releases:
      name: Tag Releases
      runs-on: ubuntu-20.04
      permissions:
        contents: write
      needs: [build_and_test]
      if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Bump version and push tag
          uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
          env:
            DEFAULT_BUMP: 'patch'
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            DRY_RUN: false
            

  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: [build_and_test, tag_releases]
    concurrency: deploy-group
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
